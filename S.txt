index.html{<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Management - Home</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav id="mySidenav" class="sidenav">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">×</a>
        <a href="data.html">Stored Data</a>
        <a href="index.html">Data Entry</a>
    </nav>
    <div id="main">
        <span style="font-size:30px;cursor:pointer" onclick="openNav()">☰ Menu</span>
        <h1>Data Management</h1>
        <form id="dataForm">
            <label for="pdfFile">PDF File:</label>
            <input type="file" id="pdfFile" name="pdfFile" accept="application/pdf" required><br><br>
            
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required><br><br>
            
            <label for="enrollmentNumber">Enrollment Number:</label>
            <input type="text" id="enrollmentNumber" name="enrollmentNumber" required><br><br>
            
            <label for="status">Status:</label>
            <select id="status" name="status">
                <option value="process">Process</option>
                <option value="generated">Generated</option>
                <option value="rejected">Rejected</option>
            </select><br><br>
            
            <button type="submit">Submit</button>
        </form>
    </div>
    
    <script src="script.js"></script> <!-- Load the external JavaScript file -->
</body>
</html>}
data.html{<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Management - Home</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav id="mySidenav" class="sidenav">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">×</a>
        <a href="data.html">Stored Data</a>
        <a href="index.html">Data Entry</a>
    </nav>
    <div id="main">
        <span style="font-size:30px;cursor:pointer" onclick="openNav()">☰ Menu</span>
        <h1>Data Management</h1>
        <form id="dataForm">
            <label for="pdfFile">PDF File:</label>
            <input type="file" id="pdfFile" name="pdfFile" accept="application/pdf" required><br><br>
            
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required><br><br>
            
            <label for="enrollmentNumber">Enrollment Number:</label>
            <input type="text" id="enrollmentNumber" name="enrollmentNumber" required><br><br>
            
            <label for="status">Status:</label>
            <select id="status" name="status">
                <option value="process">Process</option>
                <option value="generated">Generated</option>
                <option value="rejected">Rejected</option>
            </select><br><br>
            
            <button type="submit">Submit</button>
        </form>
    </div>
    
    <script src="script.js"></script> <!-- Load the external JavaScript file -->
</body>
</html>}
script.js{// Open and Close Navigation
function openNav() {
    document.getElementById("mySidenav").style.width = "250px";
    document.getElementById("main").style.marginLeft = "250px";
}

function closeNav() {
    document.getElementById("mySidenav").style.width = "0";
    document.getElementById("main").style.marginLeft = "0";
}

// Handle Form Submission and LocalStorage Save
document.getElementById('dataForm')?.addEventListener('submit', function(event) {
    event.preventDefault();

    const pdfFile = document.getElementById('pdfFile').files[0];
    const name = document.getElementById('name').value;
    const enrollmentNumber = document.getElementById('enrollmentNumber').value;
    const status = document.getElementById('status').value;
    const date = new Date().toLocaleDateString();

    if (pdfFile && name && enrollmentNumber && status) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const data = {
                pdfFile: e.target.result,
                pdfFileName: pdfFile.name,
                name: name,
                enrollmentNumber: enrollmentNumber,
                status: status,
                date: date
            };
            localStorage.setItem(Date.now(), JSON.stringify(data));
            window.location.href = 'data.html'; // Redirect to data page
        };
        reader.readAsDataURL(pdfFile);
    } else {
        alert('Please fill in all fields.');
    }
});

// Display Data with Search and Filter Support
function displayData(filter = 'all', startDate = null, endDate = null, searchQuery = '') {
    const dataContainer = document.getElementById('dataContainer');
    dataContainer.innerHTML = '';

    searchQuery = searchQuery.toLowerCase();

    for (let key in localStorage) {
        if (localStorage.hasOwnProperty(key)) {
            const data = JSON.parse(localStorage.getItem(key));
            const dataDate = new Date(data.date);
            const start = startDate ? new Date(startDate) : null;
            const end = endDate ? new Date(endDate) : null;

            // Check if data matches search query and filters
            if ((filter === 'all' || data.status === filter) &&
                (!start || dataDate >= start) &&
                (!end || dataDate <= end) &&
                (data.name.toLowerCase().includes(searchQuery) || data.enrollmentNumber.toLowerCase().includes(searchQuery))) {

                const dataItem = document.createElement('div');
                dataItem.className = 'data-item';
                dataItem.innerHTML = `
                    <p>PDF File: <a href="${data.pdfFile}" download="${data.pdfFileName}">Download PDF</a></p>
                    <p>Name: ${data.name}</p>
                    <p>Enrollment Number: ${data.enrollmentNumber}</p>
                    <p>Status: ${data.status}</p>
                    <p>Date: ${data.date}</p>
                    <label for="editStatus">Edit Status:</label>
                    <select id="editStatus" onchange="updateStatus('${key}', this.value)">
                        <option value="process" ${data.status === 'process' ? 'selected' : ''}>Process</option>
                        <option value="generated" ${data.status === 'generated' ? 'selected' : ''}>Generated</option>
                        <option value="rejected" ${data.status === 'rejected' ? 'selected' : ''}>Rejected</option>
                    </select>
                    <button onclick="confirmDelete('${key}')">Delete</button>
                `;
                dataContainer.appendChild(dataItem);
            }
        }
    }
}

// Update Status in LocalStorage
function updateStatus(key, newStatus) {
    const data = JSON.parse(localStorage.getItem(key));
    data.status = newStatus;
    localStorage.setItem(key, JSON.stringify(data));
    filterData(); // Reapply filters after status change
}

// Filter Data by Dropdown and Date
function filterData() {
    const filter = document.getElementById('filterOptions').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const searchQuery = document.getElementById('searchBox').value;
    displayData(filter, startDate, endDate, searchQuery);
}

// Reset Date Filter
function resetDateFilter() {
    document.getElementById('startDate').value = '';
    document.getElementById('endDate').value = '';
    filterData();
}

// Confirm and Delete Data from LocalStorage
function confirmDelete(key) {
    if (confirm('Are you sure you want to delete this data?')) {
        localStorage.removeItem(key);
        filterData();
    }
}

// Download All Data as PDF
function downloadAllData() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();
    let y = 10;

    for (let key in localStorage) {
        if (localStorage.hasOwnProperty(key)) {
            const data = JSON.parse(localStorage.getItem(key));
            doc.text(`PDF File: ${data.pdfFileName}`, 10, y);
            y += 10;
            doc.text(`Name: ${data.name}`, 10, y);
            y += 10;
            doc.text(`Enrollment Number: ${data.enrollmentNumber}`, 10, y);
            y += 10;
            doc.text(`Status: ${data.status}`, 10, y);
            y += 10;
            doc.text(`Date: ${data.date}`, 10, y);
            y += 20;

            // Check if the page height is exceeded and add a new page if necessary
            if (y > 280) {
                doc.addPage();
                y = 10;
            }
        }
    }

    doc.save('all_data.pdf');
}

// Add Event Listener for Search
document.getElementById('searchBox').addEventListener('input', filterData);

// On page load, display all data
window.onload = function() {
    if (document.getElementById('dataContainer')) {
        displayData();
    }
};}
server.py {from flask import Flask, request, jsonify, send_file
import os
import json
from datetime import datetime

app = Flask(__name__)

UPLOAD_FOLDER = 'uploads'
if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

DATA_FILE = 'data.json'

def load_data():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as file:
            return json.load(file)
    return []

def save_data(data):
    with open(DATA_FILE, 'w') as file:
        json.dump(data, file)

@app.route('/submit', methods=['POST'])
def submit_data():
    data = load_data()

    # Save PDF file
    pdf_file = request.files['pdfFile']
    pdf_filename = pdf_file.filename
    pdf_file.save(os.path.join(UPLOAD_FOLDER, pdf_filename))

    new_entry = {
        'pdfFile': pdf_filename,
        'name': request.form['name'],
        'enrollmentNumber': request.form['enrollmentNumber'],
        'status': request.form['status'],
        'date': datetime.now().strftime('%Y-%m-%d')
    }
    data.append(new_entry)
    save_data(data)
    return jsonify({'message': 'Data submitted successfully'})

@app.route('/data', methods=['GET'])
def get_data():
    return jsonify(load_data())

@app.route('/download/<filename>', methods=['GET'])
def download_file(filename):
    return send_file(os.path.join(UPLOAD_FOLDER, filename), as_attachment=True)

if __name__ == '__main__':
    app.run(debug=True)
    }
styles.css{    body {
    font-family: 'Roboto', sans-serif;
    background-color: #121212; /* Matte black background */
    color: #ffffff; /* White text */
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: flex-start; /* Align items at the top */
    align-items: center; /* Center items horizontally */
    height: 100vh;
    flex-direction: column;
}

h1, h2 {
    color: #ffffff;
    margin-bottom: 20px;
}

nav {
    height: 100%;
    width: 0;
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    background-color: #1f1f1f; /* Darker shade for the navbar */
    overflow-x: hidden;
    transition: 0.5s;
    padding-top: 60px;
}

nav a {
    padding: 10px 15px;
    text-decoration: none;
    font-size: 18px;
    color: #ffffff;
    display: block;
    transition: 0.3s;
}

nav a:hover {
    background-color: #333333; /* Slightly lighter shade on hover */
}

nav .closebtn {
    position: absolute;
    top: 0;
    right: 25px;
    font-size: 36px;
    margin-left: 50px;
}

#main {
    transition: margin-left 0.5s;
    padding: 20px;
    width: 100%;
    max-width: 960px; /* Center content with a max-width */
    margin: 20px auto 0; /* Center content horizontally and add top margin */
}

form, .data-item {
    background: #1f1f1f; /* Darker background for forms and containers */
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    margin-bottom: 20px;
    width: 100%;
    max-width: 600px;
}

label {
    display: block;
    margin-top: 10px;
    font-weight: bold;
    font-size: 14px;
    color: #ffffff;
}

input, select, button {
    width: 100%;
    padding: 10px;
    margin-top: 5px;
    border: 1px solid #333333;
    border-radius: 4px;
    box-sizing: border-box;
    font-size: 14px;
    background-color: #333333;
    color: #ffffff;
}

button {
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s;
    padding: 10px 20px;
    font-size: 14px;
    margin: 5px 0;
}

button:hover {
    background-color: #45a049;
}

.error-message {
    color: red;
    font-size: 14px;
    margin-top: 10px;
    display: none;
}

#dataContainer {
    width: 100%;
    max-width: 600px;
}

.data-item {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    font-size: 14px;
    color: #ffffff;
}

.data-item p {
    margin: 2px 0;
}

.data-item select {
    margin-top: 5px;
}

a {
    color: #4CAF50;
    text-decoration: none;
    margin-top: 20px;
}

a:hover {
    text-decoration: underline;
}

#searchBox, #filterOptions, #startDate, #endDate {
    width: auto;
    padding: 5px;
    font-size: 14px;
    margin: 5px;
    background-color: #333333;
    color: #ffffff;
}

#filterSection {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
}

@media (max-width: 600px) {
    #searchBox, #filterOptions, #startDate, #endDate {
        width: 100%;
        margin: 10px 0;
    }
}

}